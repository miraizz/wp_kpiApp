{"ast":null,"code":"var _jsxFileName = \"/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/Untitled/client/src/components/KPIDetailModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './KPIDetailModal.css'; // Import custom CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction KPIDetailModal({\n  show,\n  onClose,\n  onSubmit,\n  kpiDetails\n}) {\n  _s();\n  // Basic states for the modal\n  const [selectedProgress, setSelectedProgress] = useState(0);\n  const [currentProgress, setCurrentProgress] = useState(0); // Actual progress from KPI\n  const [comment, setComment] = useState('');\n  const [files, setFiles] = useState([]);\n  const [hasEvidence, setHasEvidence] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showEvidenceSection, setShowEvidenceSection] = useState(false);\n\n  // Update states when KPI details change\n  useEffect(() => {\n    if (kpiDetails) {\n      setSelectedProgress(kpiDetails.progress || 0);\n      setCurrentProgress(kpiDetails.progress || 0);\n      setComment('');\n      setFiles([]);\n\n      // Check if evidence files exist\n      setHasEvidence(kpiDetails.files && kpiDetails.files.length > 0);\n\n      // Initialize comments array if it exists in kpiDetails\n      setComments(kpiDetails.comments || []);\n      setShowSuccessAlert(false);\n\n      // Only show evidence section if current progress is 100%\n      setShowEvidenceSection(kpiDetails.progress === 100);\n    }\n  }, [kpiDetails]);\n\n  // Return early if no KPI is selected\n  if (!kpiDetails) return null;\n\n  // Check if KPI is already submitted\n  const isSubmitted = kpiDetails.submitted === true;\n\n  // Handle progress button clicks\n  const handleProgressChange = newProgress => {\n    setSelectedProgress(newProgress);\n  };\n\n  // Handle file selection\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files));\n  };\n\n  // Handle evidence upload\n  const handleEvidenceUpload = async () => {\n    if (files.length > 0) {\n      try {\n        // Step 1: Prepare new files list\n        const updatedFiles = [...(kpiDetails.files || []), ...files];\n\n        // Step 2: Send to backend\n        await fetch(`/api/kpi/${kpiDetails.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            evidence: files.map(f => f.name)\n          }) // or file paths if you upload to a server\n        });\n\n        // Step 3: Notify parent and update local state\n        onSubmit({\n          type: 'evidence',\n          evidence: updatedFiles,\n          progress: currentProgress\n        });\n        setHasEvidence(true);\n        setFiles([]);\n        setSuccessMessage('Evidence uploaded successfully! You can now submit your KPI.');\n        setShowSuccessAlert(true);\n      } catch (error) {\n        console.error('Failed to upload evidence:', error);\n        alert('Error uploading evidence. Please try again.');\n      }\n    }\n  };\n\n  // Handle progress update submission\n  const handleProgressSubmit = async () => {\n    if (!comment.trim()) {\n      return alert('Please add a comment before updating progress.');\n    }\n    const newComment = {\n      text: comment,\n      date: new Date().toLocaleString(),\n      progress: selectedProgress,\n      by: 'Staff'\n    };\n    const updatedComments = [...comments, newComment];\n    setComments(updatedComments);\n    setCurrentProgress(selectedProgress);\n\n    // Update backend\n    try {\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          progress: selectedProgress,\n          comments: updatedComments\n        })\n      });\n      if (!response.ok) throw new Error('Failed to update progress');\n\n      // Local UI updates\n      if (selectedProgress === 100) {\n        setShowEvidenceSection(true);\n        setSuccessMessage('Progress updated to 100%! Please upload evidence before submitting your KPI.');\n      } else {\n        setShowEvidenceSection(false);\n        setHasEvidence(false);\n        setSuccessMessage('Progress updated successfully!');\n      }\n      setShowSuccessAlert(true);\n      setComment('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n  // Handle final KPI submission\n  const handleKpiSubmit = () => {\n    // Get the last comment from the comments array to use as final comment\n    let finalCommentText = \"\";\n    if (comments.length > 0) {\n      finalCommentText = comments[comments.length - 1].text;\n    }\n\n    // Create final comment object using the last comment text\n    const finalComment = {\n      text: finalCommentText,\n      date: new Date().toLocaleString(),\n      progress: 100,\n      isFinal: true\n    };\n\n    // Update comments with final comment (if not empty)\n    let updatedComments = [...comments];\n    if (finalCommentText) {\n      updatedComments = [...comments, finalComment];\n    }\n\n    // Match the parent component's expected data structure\n    onSubmit({\n      type: 'submit',\n      progress: 100,\n      comment: finalCommentText,\n      comments: updatedComments\n    });\n\n    // Show success message\n    setSuccessMessage('KPI submitted successfully!');\n    setShowSuccessAlert(true);\n  };\n\n  // Define when Submit KPI button should be enabled\n  const canSubmitKpi = currentProgress === 100 && hasEvidence && !isSubmitted;\n\n  // If modal is not showing, don't render anything\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"KPI Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi-details-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: kpiDetails.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kpi-description\",\n            children: kpiDetails.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kpi-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kpi-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Due Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Verification: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.verifyStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), showSuccessAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-alert\",\n            onClick: () => setShowSuccessAlert(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Current Progress: \", kpiDetails.progress || 0, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-bar ${(kpiDetails.progress || 0) === 100 ? 'progress-complete' : ''}`,\n            style: {\n              width: `${kpiDetails.progress || 0}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Progress Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-container\",\n            children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"comment-date\",\n                  children: comment.date || 'Unknown date'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"progress-badge\",\n                  children: [comment.progress || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), comment.isFinal && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"final-comment\",\n                children: \"Final submission comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submitted-message\",\n          children: \"Your KPI has been submitted. Please wait for verification.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [currentProgress !== 100 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Update Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-buttons\",\n                children: [20, 40, 60, 80, 100].map(val => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `progress-btn ${selectedProgress === val ? 'selected' : ''}`,\n                  onClick: () => handleProgressChange(val),\n                  children: [val, \"%\"]\n                }, val, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"comment\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"comment\",\n                rows: 3,\n                className: \"comment-textarea\",\n                placeholder: \"Add a comment about your progress...\",\n                value: comment,\n                onChange: e => setComment(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), showEvidenceSection && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Evidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), !hasEvidence && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-alert\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"warning-icon\",\n                children: \"\\u26A0\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this), \"Please upload evidence to complete your KPI submission.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileChange,\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `upload-btn ${files.length === 0 ? 'disabled' : ''}`,\n              onClick: handleEvidenceUpload,\n              disabled: files.length === 0,\n              children: \"Upload Evidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), hasEvidence && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"success-text\",\n              children: \"\\u2713 Evidence uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `update-btn ${!comment.trim() ? 'disabled' : ''}`,\n            onClick: handleProgressSubmit,\n            disabled: !comment.trim(),\n            children: \"Update Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), showEvidenceSection && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `submit-btn ${!canSubmitKpi ? 'disabled' : ''}`,\n            onClick: handleKpiSubmit,\n            disabled: !canSubmitKpi,\n            children: \"Submit KPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(KPIDetailModal, \"A2X5ibEPlJcxmw4KXkwcqhw8jOc=\");\n_c = KPIDetailModal;\nexport default KPIDetailModal;\nvar _c;\n$RefreshReg$(_c, \"KPIDetailModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","KPIDetailModal","show","onClose","onSubmit","kpiDetails","_s","selectedProgress","setSelectedProgress","currentProgress","setCurrentProgress","comment","setComment","files","setFiles","hasEvidence","setHasEvidence","comments","setComments","showSuccessAlert","setShowSuccessAlert","successMessage","setSuccessMessage","showEvidenceSection","setShowEvidenceSection","progress","length","isSubmitted","submitted","handleProgressChange","newProgress","handleFileChange","e","Array","from","target","handleEvidenceUpload","updatedFiles","fetch","id","method","headers","body","JSON","stringify","evidence","map","f","name","type","error","console","alert","handleProgressSubmit","trim","newComment","text","date","Date","toLocaleString","by","updatedComments","response","ok","Error","handleKpiSubmit","finalCommentText","finalComment","isFinal","canSubmitKpi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","description","category","priority","status","startDate","dueDate","verifyStatus","style","width","index","val","htmlFor","rows","placeholder","value","onChange","multiple","disabled","_c","$RefreshReg$"],"sources":["/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/Untitled/client/src/components/KPIDetailModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './KPIDetailModal.css'; // Import custom CSS\n\nfunction KPIDetailModal({ show, onClose, onSubmit, kpiDetails }) {\n  // Basic states for the modal\n  const [selectedProgress, setSelectedProgress] = useState(0);\n  const [currentProgress, setCurrentProgress] = useState(0); // Actual progress from KPI\n  const [comment, setComment] = useState('');\n  const [files, setFiles] = useState([]);\n  const [hasEvidence, setHasEvidence] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showEvidenceSection, setShowEvidenceSection] = useState(false);\n\n  // Update states when KPI details change\n  useEffect(() => {\n    if (kpiDetails) {\n      setSelectedProgress(kpiDetails.progress || 0);\n      setCurrentProgress(kpiDetails.progress || 0);\n      setComment('');\n      setFiles([]);\n\n      // Check if evidence files exist\n      setHasEvidence(kpiDetails.files && kpiDetails.files.length > 0);\n\n      // Initialize comments array if it exists in kpiDetails\n      setComments(kpiDetails.comments || []);\n      setShowSuccessAlert(false);\n\n      // Only show evidence section if current progress is 100%\n      setShowEvidenceSection(kpiDetails.progress === 100);\n    }\n  }, [kpiDetails]);\n\n  // Return early if no KPI is selected\n  if (!kpiDetails) return null;\n\n  // Check if KPI is already submitted\n  const isSubmitted = kpiDetails.submitted === true;\n\n  // Handle progress button clicks\n  const handleProgressChange = (newProgress) => {\n    setSelectedProgress(newProgress);\n  };\n\n  // Handle file selection\n  const handleFileChange = (e) => {\n    setFiles(Array.from(e.target.files));\n  };\n\n  // Handle evidence upload\n  const handleEvidenceUpload = async () => {\n    if (files.length > 0) {\n      try {\n        // Step 1: Prepare new files list\n        const updatedFiles = [...(kpiDetails.files || []), ...files];\n\n        // Step 2: Send to backend\n        await fetch(`/api/kpi/${kpiDetails.id}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ evidence: files.map(f => f.name) }) // or file paths if you upload to a server\n        });\n\n        // Step 3: Notify parent and update local state\n        onSubmit({\n          type: 'evidence',\n          evidence: updatedFiles,\n          progress: currentProgress\n        });\n\n        setHasEvidence(true);\n        setFiles([]);\n        setSuccessMessage('Evidence uploaded successfully! You can now submit your KPI.');\n        setShowSuccessAlert(true);\n      } catch (error) {\n        console.error('Failed to upload evidence:', error);\n        alert('Error uploading evidence. Please try again.');\n      }\n    }\n  };\n\n  // Handle progress update submission\n  const handleProgressSubmit = async () => {\n    if (!comment.trim()) {\n      return alert('Please add a comment before updating progress.');\n    }\n\n    const newComment = {\n      text: comment,\n      date: new Date().toLocaleString(),\n      progress: selectedProgress,\n      by: 'Staff'\n    };\n\n    const updatedComments = [...comments, newComment];\n    setComments(updatedComments);\n    setCurrentProgress(selectedProgress);\n\n    // Update backend\n    try {\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          progress: selectedProgress,\n          comments: updatedComments\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to update progress');\n\n      // Local UI updates\n      if (selectedProgress === 100) {\n        setShowEvidenceSection(true);\n        setSuccessMessage('Progress updated to 100%! Please upload evidence before submitting your KPI.');\n      } else {\n        setShowEvidenceSection(false);\n        setHasEvidence(false);\n        setSuccessMessage('Progress updated successfully!');\n      }\n\n      setShowSuccessAlert(true);\n      setComment('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n\n  // Handle final KPI submission\n  const handleKpiSubmit = () => {\n    // Get the last comment from the comments array to use as final comment\n    let finalCommentText = \"\";\n    if (comments.length > 0) {\n      finalCommentText = comments[comments.length - 1].text;\n    }\n\n    // Create final comment object using the last comment text\n    const finalComment = {\n      text: finalCommentText,\n      date: new Date().toLocaleString(),\n      progress: 100,\n      isFinal: true\n    };\n\n    // Update comments with final comment (if not empty)\n    let updatedComments = [...comments];\n    if (finalCommentText) {\n      updatedComments = [...comments, finalComment];\n    }\n\n    // Match the parent component's expected data structure\n    onSubmit({\n      type: 'submit',\n      progress: 100,\n      comment: finalCommentText,\n      comments: updatedComments\n    });\n\n    // Show success message\n    setSuccessMessage('KPI submitted successfully!');\n    setShowSuccessAlert(true);\n  };\n\n  // Define when Submit KPI button should be enabled\n  const canSubmitKpi = currentProgress === 100 && hasEvidence && !isSubmitted;\n\n  // If modal is not showing, don't render anything\n  if (!show) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-container\">\n        {/* Modal Header */}\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">KPI Details</h3>\n          <button\n            onClick={onClose}\n            className=\"close-button\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Modal Body */}\n        <div className=\"modal-body\">\n          {/* KPI Details Header */}\n          <div className=\"kpi-details-header\">\n            <h5>{kpiDetails.title}</h5>\n            <p className=\"kpi-description\">{kpiDetails.description}</p>\n            <div className=\"kpi-info-row\">\n              <span>Category: <strong>{kpiDetails.category}</strong></span>\n              <span>Priority: <strong>{kpiDetails.priority}</strong></span>\n              <span>Status: <strong>{kpiDetails.status}</strong></span>\n            </div>\n            <div className=\"kpi-info-row\">\n              <span>Start Date: <strong>{kpiDetails.startDate}</strong></span>\n              <span>Due Date: <strong>{kpiDetails.dueDate}</strong></span>\n              <span>Verification: <strong>{kpiDetails.verifyStatus}</strong></span>\n            </div>\n          </div>\n\n          {/* Success alert for actions */}\n          {showSuccessAlert && (\n            <div className=\"alert alert-success\">\n              <span>{successMessage}</span>\n              <button\n                className=\"close-alert\"\n                onClick={() => setShowSuccessAlert(false)}\n              >\n                ×\n              </button>\n            </div>\n          )}\n\n          {/* Progress Display - Show actual KPI progress */}\n          <h6>Current Progress: {kpiDetails.progress || 0}%</h6>\n          <div className=\"progress-container\">\n            <div\n              className={`progress-bar ${(kpiDetails.progress || 0) === 100 ? 'progress-complete' : ''}`}\n              style={{ width: `${kpiDetails.progress || 0}%` }}>\n            </div>\n          </div>\n\n          {/* Display comments if available */}\n          {comments.length > 0 && (\n            <div className=\"comments-section\">\n              <h6>Progress Comments:</h6>\n              <div className=\"comments-container\">\n                {comments.map((comment, index) => (\n                  <div key={index} className=\"comment-item\">\n                    <div className=\"comment-header\">\n                      <small className=\"comment-date\">{comment.date || 'Unknown date'}</small>\n                      <small className=\"progress-badge\">\n                        {comment.progress || 0}%\n                      </small>\n                    </div>\n                    <p>{comment.text}</p>\n                    {comment.isFinal &&\n                      <small className=\"final-comment\">Final submission comment</small>\n                    }\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Display submitted message or edit controls */}\n          {isSubmitted ? (\n            <div className=\"submitted-message\">\n              Your KPI has been submitted. Please wait for verification.\n            </div>\n          ) : (\n            <>\n\n              {/* Hide Progress & Comment update when progress is 100 */}\n              {currentProgress !== 100 && (\n                <>\n                  {/* Progress Selection */}\n                  <div className=\"form-group\">\n                    <label>Update Progress</label>\n                    <div className=\"progress-buttons\">\n                      {[20, 40, 60, 80, 100].map((val) => (\n                        <button\n                          key={val}\n                          className={`progress-btn ${selectedProgress === val ? 'selected' : ''}`}\n                          onClick={() => handleProgressChange(val)}\n                        >\n                          {val}%\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Comment Input */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"comment\">Comment</label>\n                    <textarea\n                      id=\"comment\"\n                      rows={3}\n                      className=\"comment-textarea\"\n                      placeholder=\"Add a comment about your progress...\"\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                    ></textarea>\n                  </div>\n                </>\n              )}\n\n\n              {/* Evidence Upload - Only show after progress is updated to 100% */}\n              {showEvidenceSection && (\n                <div className=\"form-group\">\n                  <label>Upload Evidence</label>\n                  {!hasEvidence && (\n                    <div className=\"warning-alert\">\n                      <i className=\"warning-icon\">⚠️</i>\n                      Please upload evidence to complete your KPI submission.\n                    </div>\n                  )}\n                  <input\n                    type=\"file\"\n                    multiple\n                    onChange={handleFileChange}\n                    className=\"file-input\"\n                  />\n                  <button\n                    className={`upload-btn ${files.length === 0 ? 'disabled' : ''}`}\n                    onClick={handleEvidenceUpload}\n                    disabled={files.length === 0}>\n                    Upload Evidence\n                  </button>\n                  {hasEvidence && <small className=\"success-text\">✓ Evidence uploaded</small>}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n\n        {/* Modal Footer */}\n        <div className=\"modal-footer\">\n          <button\n            className=\"close-btn\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n\n          {!isSubmitted && (\n            <>\n              {/* Update Progress Button */}\n              <button\n                className={`update-btn ${!comment.trim() ? 'disabled' : ''}`}\n                onClick={handleProgressSubmit}\n                disabled={!comment.trim()}\n              >\n                Update Progress\n              </button>\n\n              {/* Submit KPI Button - Only if progress is 100% and evidence is uploaded */}\n              {showEvidenceSection && (\n                <button\n                  className={`submit-btn ${!canSubmitKpi ? 'disabled' : ''}`}\n                  onClick={handleKpiSubmit}\n                  disabled={!canSubmitKpi}>\n                  Submit KPI\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default KPIDetailModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}