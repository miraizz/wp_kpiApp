{"ast":null,"code":"const KPI = require('../models/kpiModel');\n\n/**\n * GET /api/kpi\n * Retrieve all KPI records\n */\nexports.getAllKPIs = async (req, res) => {\n  try {\n    const kpis = await KPI.find();\n    res.json(kpis);\n  } catch (err) {\n    console.error('Error fetching KPIs:', err);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n};\n\n/**\n * GET /api/kpi/:id\n * Retrieve a single KPI by custom ID (e.g., KPI-2025-001)\n */\nexports.getKPIById = async (req, res) => {\n  try {\n    const kpi = await KPI.findOne({\n      id: req.params.id\n    });\n    if (!kpi) {\n      return res.status(404).json({\n        error: 'KPI not found'\n      });\n    }\n    res.json(kpi);\n  } catch (err) {\n    console.error('Error fetching KPI:', err);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n};\n\n/**\n * POST /api/kpi\n * Create a new KPI entry with auto-generated ID\n */\nexports.createKPI = async (req, res) => {\n  try {\n    const count = await KPI.countDocuments();\n    const newId = `KPI-2025-${String(count + 1).padStart(3, '0')}`;\n    const kpi = new KPI({\n      ...req.body,\n      id: newId,\n      submitted: false,\n      verifyStatus: 'Pending'\n    });\n    await kpi.save();\n    res.status(201).json(kpi);\n  } catch (err) {\n    console.error('Error creating KPI:', err);\n    res.status(500).json({\n      error: err.message || 'Internal server error'\n    });\n  }\n};\n\n/**\n * PUT /api/kpi/:id\n * Update an existing KPI by custom ID\n * FIXED: Now handles all KPI fields from the management interface\n */\nexports.updateKPI = async (req, res) => {\n  try {\n    console.log('Update request for KPI:', req.params.id);\n    console.log('Update data:', req.body);\n    const kpi = await KPI.findOne({\n      id: req.params.id\n    });\n    if (!kpi) {\n      console.log('KPI not found:', req.params.id);\n      return res.status(404).json({\n        error: 'KPI not found'\n      });\n    }\n\n    // Handle basic KPI information fields (from management interface)\n    const {\n      title,\n      description,\n      category,\n      priority,\n      startDate,\n      dueDate,\n      assignedTo,\n      assignedBy,\n      // Progress tracking fields (from staff interface)\n      progress,\n      status,\n      submitted,\n      verifyStatus,\n      comments,\n      evidenceFiles // Base64 files sent from frontend\n    } = req.body;\n\n    // Update basic fields if provided\n    if (title !== undefined) kpi.title = title;\n    if (description !== undefined) kpi.description = description;\n    if (category !== undefined) kpi.category = category;\n    if (priority !== undefined) kpi.priority = priority;\n    if (startDate !== undefined) kpi.startDate = startDate;\n    if (dueDate !== undefined) kpi.dueDate = dueDate;\n\n    // Update assigned information if provided\n    if (assignedTo) {\n      if (assignedTo.name !== undefined) kpi.assignedTo.name = assignedTo.name;\n      if (assignedTo.staffId !== undefined) kpi.assignedTo.staffId = assignedTo.staffId;\n      if (assignedTo.department !== undefined) kpi.assignedTo.department = assignedTo.department;\n    }\n    if (assignedBy) {\n      if (assignedBy.name !== undefined) kpi.assignedBy.name = assignedBy.name;\n      if (assignedBy.managerId !== undefined) kpi.assignedBy.managerId = assignedBy.managerId;\n    }\n\n    // Update progress tracking fields if provided\n    if (progress !== undefined) kpi.progress = progress;\n    if (status !== undefined) kpi.status = status;\n    if (submitted !== undefined) kpi.submitted = submitted;\n    if (verifyStatus !== undefined) kpi.verifyStatus = verifyStatus;\n    if (Array.isArray(comments)) kpi.comments = comments;\n    if (Array.isArray(evidenceFiles)) kpi.evidenceFiles = evidenceFiles;\n    await kpi.save();\n    console.log('KPI updated successfully:', kpi.id);\n    res.json(kpi);\n  } catch (err) {\n    console.error('Error updating KPI:', err);\n    res.status(500).json({\n      error: err.message || 'Internal server error'\n    });\n  }\n};\n\n/**\n * DELETE /api/kpi/:id\n * Delete a KPI by custom ID\n * FIXED: Added better logging for debugging\n */\nexports.deleteKPI = async (req, res) => {\n  try {\n    console.log('Delete request for KPI:', req.params.id);\n    const deleted = await KPI.findOneAndDelete({\n      id: req.params.id\n    });\n    if (!deleted) {\n      console.log('KPI not found for deletion:', req.params.id);\n      return res.status(404).json({\n        error: 'KPI not found'\n      });\n    }\n    console.log('KPI deleted successfully:', req.params.id);\n    res.json({\n      message: 'KPI deleted successfully',\n      deletedKPI: deleted\n    });\n  } catch (err) {\n    console.error('Error deleting KPI:', err);\n    res.status(500).json({\n      error: err.message || 'Internal server error'\n    });\n  }\n};\nexports.getPendingKPIs = async (req, res) => {\n  try {\n    const kpis = await KPI.find({\n      status: 'Completed',\n      progress: 100,\n      submitted: true,\n      verifyStatus: 'Pending'\n    });\n    res.status(200).json(kpis);\n  } catch (err) {\n    res.status(500).json({\n      error: 'Failed to fetch pending KPIs'\n    });\n  }\n};\nexports.verifyKPI = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      status,\n      comment\n    } = req.body;\n    const kpi = await KPI.findOne({\n      id\n    });\n    if (!kpi) return res.status(404).json({\n      error: 'KPI not found'\n    });\n    kpi.verifyStatus = status === 'Accepted' ? 'Accepted' : 'Rejected';\n    if (comment) {\n      kpi.comments.push({\n        text: comment,\n        date: new Date(),\n        progress: 100,\n        isFinal: true,\n        by: 'Manager'\n      });\n    }\n    await kpi.save();\n    res.json(kpi);\n  } catch (err) {\n    console.error('Error verifying KPI:', err);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n};\nexports.getKPIsByStaffId = async (req, res) => {\n  const {\n    staffId\n  } = req.params;\n  try {\n    const kpis = await KPI.find({\n      'assignedTo.staffId': staffId\n    });\n    res.json(kpis);\n  } catch (err) {\n    console.error('Error fetching KPIs:', err);\n    res.status(500).json({\n      error: 'Server error'\n    });\n  }\n};","map":{"version":3,"names":["KPI","require","exports","getAllKPIs","req","res","kpis","find","json","err","console","error","status","getKPIById","kpi","findOne","id","params","createKPI","count","countDocuments","newId","String","padStart","body","submitted","verifyStatus","save","message","updateKPI","log","title","description","category","priority","startDate","dueDate","assignedTo","assignedBy","progress","comments","evidenceFiles","undefined","name","staffId","department","managerId","Array","isArray","deleteKPI","deleted","findOneAndDelete","deletedKPI","getPendingKPIs","verifyKPI","comment","push","text","date","Date","isFinal","by","getKPIsByStaffId"],"sources":["/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/client/src/pages/KPIManagement.js"],"sourcesContent":["const KPI = require('../models/kpiModel');\n\n/**\n * GET /api/kpi\n * Retrieve all KPI records\n */\nexports.getAllKPIs = async (req, res) => {\n    try {\n        const kpis = await KPI.find();\n        res.json(kpis);\n    } catch (err) {\n        console.error('Error fetching KPIs:', err);\n        res.status(500).json({ error: 'Internal server error' });\n    }\n};\n\n/**\n * GET /api/kpi/:id\n * Retrieve a single KPI by custom ID (e.g., KPI-2025-001)\n */\nexports.getKPIById = async (req, res) => {\n    try {\n        const kpi = await KPI.findOne({ id: req.params.id });\n        if (!kpi) {\n            return res.status(404).json({ error: 'KPI not found' });\n        }\n        res.json(kpi);\n    } catch (err) {\n        console.error('Error fetching KPI:', err);\n        res.status(500).json({ error: 'Internal server error' });\n    }\n};\n\n/**\n * POST /api/kpi\n * Create a new KPI entry with auto-generated ID\n */\nexports.createKPI = async (req, res) => {\n    try {\n        const count = await KPI.countDocuments();\n        const newId = `KPI-2025-${String(count + 1).padStart(3, '0')}`;\n\n        const kpi = new KPI({\n            ...req.body,\n            id: newId,\n            submitted: false,\n            verifyStatus: 'Pending'\n        });\n\n        await kpi.save();\n        res.status(201).json(kpi);\n    } catch (err) {\n        console.error('Error creating KPI:', err);\n        res.status(500).json({ error: err.message || 'Internal server error' });\n    }\n};\n\n/**\n * PUT /api/kpi/:id\n * Update an existing KPI by custom ID\n * FIXED: Now handles all KPI fields from the management interface\n */\nexports.updateKPI = async (req, res) => {\n    try {\n        console.log('Update request for KPI:', req.params.id);\n        console.log('Update data:', req.body);\n\n        const kpi = await KPI.findOne({ id: req.params.id });\n        if (!kpi) {\n            console.log('KPI not found:', req.params.id);\n            return res.status(404).json({ error: 'KPI not found' });\n        }\n\n        // Handle basic KPI information fields (from management interface)\n        const {\n            title,\n            description,\n            category,\n            priority,\n            startDate,\n            dueDate,\n            assignedTo,\n            assignedBy,\n            // Progress tracking fields (from staff interface)\n            progress,\n            status,\n            submitted,\n            verifyStatus,\n            comments,\n            evidenceFiles // Base64 files sent from frontend\n        } = req.body;\n\n        // Update basic fields if provided\n        if (title !== undefined) kpi.title = title;\n        if (description !== undefined) kpi.description = description;\n        if (category !== undefined) kpi.category = category;\n        if (priority !== undefined) kpi.priority = priority;\n        if (startDate !== undefined) kpi.startDate = startDate;\n        if (dueDate !== undefined) kpi.dueDate = dueDate;\n        \n        // Update assigned information if provided\n        if (assignedTo) {\n            if (assignedTo.name !== undefined) kpi.assignedTo.name = assignedTo.name;\n            if (assignedTo.staffId !== undefined) kpi.assignedTo.staffId = assignedTo.staffId;\n            if (assignedTo.department !== undefined) kpi.assignedTo.department = assignedTo.department;\n        }\n        \n        if (assignedBy) {\n            if (assignedBy.name !== undefined) kpi.assignedBy.name = assignedBy.name;\n            if (assignedBy.managerId !== undefined) kpi.assignedBy.managerId = assignedBy.managerId;\n        }\n\n        // Update progress tracking fields if provided\n        if (progress !== undefined) kpi.progress = progress;\n        if (status !== undefined) kpi.status = status;\n        if (submitted !== undefined) kpi.submitted = submitted;\n        if (verifyStatus !== undefined) kpi.verifyStatus = verifyStatus;\n        if (Array.isArray(comments)) kpi.comments = comments;\n        if (Array.isArray(evidenceFiles)) kpi.evidenceFiles = evidenceFiles;\n\n        await kpi.save();\n        console.log('KPI updated successfully:', kpi.id);\n        res.json(kpi);\n    } catch (err) {\n        console.error('Error updating KPI:', err);\n        res.status(500).json({ error: err.message || 'Internal server error' });\n    }\n};\n\n/**\n * DELETE /api/kpi/:id\n * Delete a KPI by custom ID\n * FIXED: Added better logging for debugging\n */\nexports.deleteKPI = async (req, res) => {\n    try {\n        console.log('Delete request for KPI:', req.params.id);\n        \n        const deleted = await KPI.findOneAndDelete({ id: req.params.id });\n        if (!deleted) {\n            console.log('KPI not found for deletion:', req.params.id);\n            return res.status(404).json({ error: 'KPI not found' });\n        }\n        \n        console.log('KPI deleted successfully:', req.params.id);\n        res.json({ message: 'KPI deleted successfully', deletedKPI: deleted });\n    } catch (err) {\n        console.error('Error deleting KPI:', err);\n        res.status(500).json({ error: err.message || 'Internal server error' });\n    }\n};\n\nexports.getPendingKPIs = async (req, res) => {\n    try {\n        const kpis = await KPI.find({\n            status: 'Completed',\n            progress: 100,\n            submitted: true,\n            verifyStatus: 'Pending'\n        });\n        res.status(200).json(kpis);\n    } catch (err) {\n        res.status(500).json({ error: 'Failed to fetch pending KPIs' });\n    }\n};\n\nexports.verifyKPI = async (req, res) => {\n    try {\n        const { id } = req.params;\n        const { status, comment } = req.body;\n\n        const kpi = await KPI.findOne({ id });\n        if (!kpi) return res.status(404).json({ error: 'KPI not found' });\n\n        kpi.verifyStatus = status === 'Accepted' ? 'Accepted' : 'Rejected';\n\n        if (comment) {\n            kpi.comments.push({\n                text: comment,\n                date: new Date(),\n                progress: 100,\n                isFinal: true,\n                by: 'Manager'\n            });\n        }\n\n        await kpi.save();\n        res.json(kpi);\n    } catch (err) {\n        console.error('Error verifying KPI:', err);\n        res.status(500).json({ error: 'Internal server error' });\n    }\n};\n\nexports.getKPIsByStaffId = async (req, res) => {\n    const { staffId } = req.params;\n\n    try {\n        const kpis = await KPI.find({ 'assignedTo.staffId': staffId });\n        res.json(kpis);\n    } catch (err) {\n        console.error('Error fetching KPIs:', err);\n        res.status(500).json({ error: 'Server error' });\n    }\n};"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAEzC;AACA;AACA;AACA;AACAC,OAAO,CAACC,UAAU,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAC7BF,GAAG,CAACG,IAAI,CAACF,IAAI,CAAC;EAClB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1CJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC5D;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACAT,OAAO,CAACW,UAAU,GAAG,OAAOT,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IACA,MAAMS,GAAG,GAAG,MAAMd,GAAG,CAACe,OAAO,CAAC;MAAEC,EAAE,EAAEZ,GAAG,CAACa,MAAM,CAACD;IAAG,CAAC,CAAC;IACpD,IAAI,CAACF,GAAG,EAAE;MACN,OAAOT,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAgB,CAAC,CAAC;IAC3D;IACAN,GAAG,CAACG,IAAI,CAACM,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOL,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IACzCJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC5D;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACAT,OAAO,CAACgB,SAAS,GAAG,OAAOd,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACA,MAAMc,KAAK,GAAG,MAAMnB,GAAG,CAACoB,cAAc,CAAC,CAAC;IACxC,MAAMC,KAAK,GAAG,YAAYC,MAAM,CAACH,KAAK,GAAG,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAE9D,MAAMT,GAAG,GAAG,IAAId,GAAG,CAAC;MAChB,GAAGI,GAAG,CAACoB,IAAI;MACXR,EAAE,EAAEK,KAAK;MACTI,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;IAChBtB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAACM,GAAG,CAAC;EAC7B,CAAC,CAAC,OAAOL,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IACzCJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACmB,OAAO,IAAI;IAAwB,CAAC,CAAC;EAC3E;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA1B,OAAO,CAAC2B,SAAS,GAAG,OAAOzB,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACAK,OAAO,CAACoB,GAAG,CAAC,yBAAyB,EAAE1B,GAAG,CAACa,MAAM,CAACD,EAAE,CAAC;IACrDN,OAAO,CAACoB,GAAG,CAAC,cAAc,EAAE1B,GAAG,CAACoB,IAAI,CAAC;IAErC,MAAMV,GAAG,GAAG,MAAMd,GAAG,CAACe,OAAO,CAAC;MAAEC,EAAE,EAAEZ,GAAG,CAACa,MAAM,CAACD;IAAG,CAAC,CAAC;IACpD,IAAI,CAACF,GAAG,EAAE;MACNJ,OAAO,CAACoB,GAAG,CAAC,gBAAgB,EAAE1B,GAAG,CAACa,MAAM,CAACD,EAAE,CAAC;MAC5C,OAAOX,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAgB,CAAC,CAAC;IAC3D;;IAEA;IACA,MAAM;MACFoB,KAAK;MACLC,WAAW;MACXC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC,OAAO;MACPC,UAAU;MACVC,UAAU;MACV;MACAC,QAAQ;MACR3B,MAAM;MACNa,SAAS;MACTC,YAAY;MACZc,QAAQ;MACRC,aAAa,CAAC;IAClB,CAAC,GAAGrC,GAAG,CAACoB,IAAI;;IAEZ;IACA,IAAIO,KAAK,KAAKW,SAAS,EAAE5B,GAAG,CAACiB,KAAK,GAAGA,KAAK;IAC1C,IAAIC,WAAW,KAAKU,SAAS,EAAE5B,GAAG,CAACkB,WAAW,GAAGA,WAAW;IAC5D,IAAIC,QAAQ,KAAKS,SAAS,EAAE5B,GAAG,CAACmB,QAAQ,GAAGA,QAAQ;IACnD,IAAIC,QAAQ,KAAKQ,SAAS,EAAE5B,GAAG,CAACoB,QAAQ,GAAGA,QAAQ;IACnD,IAAIC,SAAS,KAAKO,SAAS,EAAE5B,GAAG,CAACqB,SAAS,GAAGA,SAAS;IACtD,IAAIC,OAAO,KAAKM,SAAS,EAAE5B,GAAG,CAACsB,OAAO,GAAGA,OAAO;;IAEhD;IACA,IAAIC,UAAU,EAAE;MACZ,IAAIA,UAAU,CAACM,IAAI,KAAKD,SAAS,EAAE5B,GAAG,CAACuB,UAAU,CAACM,IAAI,GAAGN,UAAU,CAACM,IAAI;MACxE,IAAIN,UAAU,CAACO,OAAO,KAAKF,SAAS,EAAE5B,GAAG,CAACuB,UAAU,CAACO,OAAO,GAAGP,UAAU,CAACO,OAAO;MACjF,IAAIP,UAAU,CAACQ,UAAU,KAAKH,SAAS,EAAE5B,GAAG,CAACuB,UAAU,CAACQ,UAAU,GAAGR,UAAU,CAACQ,UAAU;IAC9F;IAEA,IAAIP,UAAU,EAAE;MACZ,IAAIA,UAAU,CAACK,IAAI,KAAKD,SAAS,EAAE5B,GAAG,CAACwB,UAAU,CAACK,IAAI,GAAGL,UAAU,CAACK,IAAI;MACxE,IAAIL,UAAU,CAACQ,SAAS,KAAKJ,SAAS,EAAE5B,GAAG,CAACwB,UAAU,CAACQ,SAAS,GAAGR,UAAU,CAACQ,SAAS;IAC3F;;IAEA;IACA,IAAIP,QAAQ,KAAKG,SAAS,EAAE5B,GAAG,CAACyB,QAAQ,GAAGA,QAAQ;IACnD,IAAI3B,MAAM,KAAK8B,SAAS,EAAE5B,GAAG,CAACF,MAAM,GAAGA,MAAM;IAC7C,IAAIa,SAAS,KAAKiB,SAAS,EAAE5B,GAAG,CAACW,SAAS,GAAGA,SAAS;IACtD,IAAIC,YAAY,KAAKgB,SAAS,EAAE5B,GAAG,CAACY,YAAY,GAAGA,YAAY;IAC/D,IAAIqB,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,EAAE1B,GAAG,CAAC0B,QAAQ,GAAGA,QAAQ;IACpD,IAAIO,KAAK,CAACC,OAAO,CAACP,aAAa,CAAC,EAAE3B,GAAG,CAAC2B,aAAa,GAAGA,aAAa;IAEnE,MAAM3B,GAAG,CAACa,IAAI,CAAC,CAAC;IAChBjB,OAAO,CAACoB,GAAG,CAAC,2BAA2B,EAAEhB,GAAG,CAACE,EAAE,CAAC;IAChDX,GAAG,CAACG,IAAI,CAACM,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOL,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IACzCJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACmB,OAAO,IAAI;IAAwB,CAAC,CAAC;EAC3E;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA1B,OAAO,CAAC+C,SAAS,GAAG,OAAO7C,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACAK,OAAO,CAACoB,GAAG,CAAC,yBAAyB,EAAE1B,GAAG,CAACa,MAAM,CAACD,EAAE,CAAC;IAErD,MAAMkC,OAAO,GAAG,MAAMlD,GAAG,CAACmD,gBAAgB,CAAC;MAAEnC,EAAE,EAAEZ,GAAG,CAACa,MAAM,CAACD;IAAG,CAAC,CAAC;IACjE,IAAI,CAACkC,OAAO,EAAE;MACVxC,OAAO,CAACoB,GAAG,CAAC,6BAA6B,EAAE1B,GAAG,CAACa,MAAM,CAACD,EAAE,CAAC;MACzD,OAAOX,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAgB,CAAC,CAAC;IAC3D;IAEAD,OAAO,CAACoB,GAAG,CAAC,2BAA2B,EAAE1B,GAAG,CAACa,MAAM,CAACD,EAAE,CAAC;IACvDX,GAAG,CAACG,IAAI,CAAC;MAAEoB,OAAO,EAAE,0BAA0B;MAAEwB,UAAU,EAAEF;IAAQ,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOzC,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IACzCJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACmB,OAAO,IAAI;IAAwB,CAAC,CAAC;EAC3E;AACJ,CAAC;AAED1B,OAAO,CAACmD,cAAc,GAAG,OAAOjD,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC;MACxBK,MAAM,EAAE,WAAW;MACnB2B,QAAQ,EAAE,GAAG;MACbd,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;IAClB,CAAC,CAAC;IACFrB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAACF,IAAI,CAAC;EAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAA+B,CAAC,CAAC;EACnE;AACJ,CAAC;AAEDT,OAAO,CAACoD,SAAS,GAAG,OAAOlD,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACA,MAAM;MAAEW;IAAG,CAAC,GAAGZ,GAAG,CAACa,MAAM;IACzB,MAAM;MAAEL,MAAM;MAAE2C;IAAQ,CAAC,GAAGnD,GAAG,CAACoB,IAAI;IAEpC,MAAMV,GAAG,GAAG,MAAMd,GAAG,CAACe,OAAO,CAAC;MAAEC;IAAG,CAAC,CAAC;IACrC,IAAI,CAACF,GAAG,EAAE,OAAOT,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAgB,CAAC,CAAC;IAEjEG,GAAG,CAACY,YAAY,GAAGd,MAAM,KAAK,UAAU,GAAG,UAAU,GAAG,UAAU;IAElE,IAAI2C,OAAO,EAAE;MACTzC,GAAG,CAAC0B,QAAQ,CAACgB,IAAI,CAAC;QACdC,IAAI,EAAEF,OAAO;QACbG,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;QAChBpB,QAAQ,EAAE,GAAG;QACbqB,OAAO,EAAE,IAAI;QACbC,EAAE,EAAE;MACR,CAAC,CAAC;IACN;IAEA,MAAM/C,GAAG,CAACa,IAAI,CAAC,CAAC;IAChBtB,GAAG,CAACG,IAAI,CAACM,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOL,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1CJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC5D;AACJ,CAAC;AAEDT,OAAO,CAAC4D,gBAAgB,GAAG,OAAO1D,GAAG,EAAEC,GAAG,KAAK;EAC3C,MAAM;IAAEuC;EAAQ,CAAC,GAAGxC,GAAG,CAACa,MAAM;EAE9B,IAAI;IACA,MAAMX,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC;MAAE,oBAAoB,EAAEqC;IAAQ,CAAC,CAAC;IAC9DvC,GAAG,CAACG,IAAI,CAACF,IAAI,CAAC;EAClB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1CJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAe,CAAC,CAAC;EACnD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}