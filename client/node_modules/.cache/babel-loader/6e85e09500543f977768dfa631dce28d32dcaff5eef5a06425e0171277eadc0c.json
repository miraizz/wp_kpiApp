{"ast":null,"code":"var _jsxFileName = \"/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/client/src/pages/Staff.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport EvidenceUpload from '../components/EvidenceUpload';\nimport ProgressUpdate from '../components/ProgressUpdate';\nimport KpiDetailModal from '../components/KpiDetailModal';\nimport './Staff.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Staff() {\n  _s();\n  const [kpis, setKpis] = useState([]);\n  const [selectedKpi, setSelectedKpi] = useState(null);\n  const [selectedKpiIndex, setSelectedKpiIndex] = useState(null);\n  const [activeEvidenceIndex, setActiveEvidenceIndex] = useState(null);\n  const [activeProgressIndex, setActiveProgressIndex] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"All\");\n  const [sortOption, setSortOption] = useState(\"None\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\n    if (!user || !user.staffId) {\n      console.warn(\"No staffId found in sessionStorage. Redirecting to login.\");\n      navigate(\"/login\");\n      return;\n    }\n    fetch(`/api/kpi/staff/${user.staffId}`).then(res => res.json()).then(data => {\n      const initialized = data.map(kpi => ({\n        ...kpi,\n        status: getStatusFromProgress(kpi.progress),\n        comments: kpi.comments || [],\n        files: kpi.files || []\n      }));\n      setKpis(initialized);\n    }).catch(err => {\n      console.error(\"Error fetching KPIs:\", err);\n      setKpis([]);\n    });\n  }, [navigate]);\n  const getStatusFromProgress = progress => {\n    if (progress === 100) return 'Completed';\n    if (progress >= 60) return 'On Track';\n    if (progress === 40) return 'At Risk';\n    return 'Behind';\n  };\n  const handleProgressSubmit = async (index, progressValue, commentText) => {\n    const updated = [...kpis];\n    const kpi = updated[index];\n    const comment = {\n      text: commentText,\n      date: new Date().toISOString(),\n      progress: progressValue,\n      isFinal: false,\n      by: 'Staff'\n    };\n    try {\n      const res = await fetch(`/api/kpi/${kpi.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          progress: progressValue,\n          status: getStatusFromProgress(progressValue),\n          comments: [...(kpi.comments || []), comment]\n        })\n      });\n      if (!res.ok) {\n        const errMsg = await res.text();\n        throw new Error(errMsg);\n      }\n      const updatedKPI = await res.json();\n      updated[index] = updatedKPI;\n      setKpis(updated);\n      setActiveProgressIndex(null);\n      alert('Progress successfully updated!');\n    } catch (err) {\n      console.error('Error updating progress:', err);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n  const handleKpiSelection = (kpi, index) => {\n    setSelectedKpi({\n      ...kpi\n    });\n    setSelectedKpiIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"staff-heading\",\n      children: \"My KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: kpis.map((kpi, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kpi-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"kpi-title\",\n              children: kpi.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-chip ${kpi.status.replace(/ /g, '-').toLowerCase()}`,\n              children: kpi.status.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${kpi.progress}%`\n              },\n              children: [kpi.progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary btn-small\",\n            onClick: () => handleKpiSelection(kpi, index),\n            children: \"View KPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProgressUpdate, {\n            show: activeProgressIndex === index,\n            currentProgress: kpi.progress,\n            onClose: () => setActiveProgressIndex(null),\n            onSubmit: (progress, comment) => handleProgressSubmit(index, progress, comment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KpiDetailModal, {\n      show: selectedKpi !== null,\n      onClose: () => {\n        setSelectedKpi(null);\n        setSelectedKpiIndex(null);\n      },\n      kpiDetails: selectedKpi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Staff, \"EnkeMpadKsZs5BvfseIXS0aGdIU=\", false, function () {\n  return [useNavigate];\n});\n_c = Staff;\nexport default Staff;\nvar _c;\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","EvidenceUpload","ProgressUpdate","KpiDetailModal","jsxDEV","_jsxDEV","Staff","_s","kpis","setKpis","selectedKpi","setSelectedKpi","selectedKpiIndex","setSelectedKpiIndex","activeEvidenceIndex","setActiveEvidenceIndex","activeProgressIndex","setActiveProgressIndex","searchQuery","setSearchQuery","filterStatus","setFilterStatus","sortOption","setSortOption","navigate","user","JSON","parse","sessionStorage","getItem","staffId","console","warn","fetch","then","res","json","data","initialized","map","kpi","status","getStatusFromProgress","progress","comments","files","catch","err","error","handleProgressSubmit","index","progressValue","commentText","updated","comment","text","date","Date","toISOString","isFinal","by","id","method","headers","body","stringify","ok","errMsg","Error","updatedKPI","alert","handleKpiSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","replace","toLowerCase","toUpperCase","style","width","onClick","show","currentProgress","onClose","onSubmit","kpiDetails","_c","$RefreshReg$"],"sources":["/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/client/src/pages/Staff.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport EvidenceUpload from '../components/EvidenceUpload';\nimport ProgressUpdate from '../components/ProgressUpdate';\nimport KpiDetailModal from '../components/KpiDetailModal';\nimport './Staff.css';\n\nfunction Staff() {\n  const [kpis, setKpis] = useState([]);\n  const [selectedKpi, setSelectedKpi] = useState(null);\n  const [selectedKpiIndex, setSelectedKpiIndex] = useState(null);\n  const [activeEvidenceIndex, setActiveEvidenceIndex] = useState(null);\n  const [activeProgressIndex, setActiveProgressIndex] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"All\");\n  const [sortOption, setSortOption] = useState(\"None\");\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\n    if (!user || !user.staffId) {\n      console.warn(\"No staffId found in sessionStorage. Redirecting to login.\");\n      navigate(\"/login\");\n      return;\n    }\n\n    fetch(`/api/kpi/staff/${user.staffId}`)\n      .then(res => res.json())\n      .then(data => {\n        const initialized = data.map(kpi => ({\n          ...kpi,\n          status: getStatusFromProgress(kpi.progress),\n          comments: kpi.comments || [],\n          files: kpi.files || []\n        }));\n        setKpis(initialized);\n      })\n      .catch(err => {\n        console.error(\"Error fetching KPIs:\", err);\n        setKpis([]);\n      });\n  }, [navigate]);\n\n  const getStatusFromProgress = (progress) => {\n    if (progress === 100) return 'Completed';\n    if (progress >= 60) return 'On Track';\n    if (progress === 40) return 'At Risk';\n    return 'Behind';\n  };\n\n  const handleProgressSubmit = async (index, progressValue, commentText) => {\n    const updated = [...kpis];\n    const kpi = updated[index];\n\n    const comment = {\n      text: commentText,\n      date: new Date().toISOString(),\n      progress: progressValue,\n      isFinal: false,\n      by: 'Staff'\n    };\n\n    try {\n      const res = await fetch(`/api/kpi/${kpi.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          progress: progressValue,\n          status: getStatusFromProgress(progressValue),\n          comments: [...(kpi.comments || []), comment]\n        })\n      });\n\n      if (!res.ok) {\n        const errMsg = await res.text();\n        throw new Error(errMsg);\n      }\n\n      const updatedKPI = await res.json();\n      updated[index] = updatedKPI;\n      setKpis(updated);\n      setActiveProgressIndex(null);\n      alert('Progress successfully updated!');\n    } catch (err) {\n      console.error('Error updating progress:', err);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n  const handleKpiSelection = (kpi, index) => {\n    setSelectedKpi({ ...kpi });\n    setSelectedKpiIndex(index);\n  };\n\n  return (\n    <div className=\"staff-container\">\n      <h3 className=\"staff-heading\">My KPI</h3>\n\n      <div className=\"row\">\n        {kpis.map((kpi, index) => (\n          <div className=\"col-6\" key={index}>\n            <div className=\"kpi-card\">\n              <div className=\"kpi-header\">\n                <h6 className=\"kpi-title\">{kpi.title}</h6>\n                <span className={`status-chip ${kpi.status.replace(/ /g, '-').toLowerCase()}`}>{kpi.status.toUpperCase()}</span>\n              </div>\n              <div className=\"progress-container\">\n                <div className=\"progress-bar\" style={{ width: `${kpi.progress}%` }}>{kpi.progress}%</div>\n              </div>\n              <button className=\"btn btn-outline-primary btn-small\" onClick={() => handleKpiSelection(kpi, index)}>View KPI</button>\n              <ProgressUpdate\n                show={activeProgressIndex === index}\n                currentProgress={kpi.progress}\n                onClose={() => setActiveProgressIndex(null)}\n                onSubmit={(progress, comment) => handleProgressSubmit(index, progress, comment)}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <KpiDetailModal\n        show={selectedKpi !== null}\n        onClose={() => {\n          setSelectedKpi(null);\n          setSelectedKpiIndex(null);\n        }}\n        kpiDetails={selectedKpi}\n      />\n    </div>\n  );\n}\n\nexport default Staff;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}