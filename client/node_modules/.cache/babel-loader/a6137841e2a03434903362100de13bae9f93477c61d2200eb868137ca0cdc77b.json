{"ast":null,"code":"var _jsxFileName = \"/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/client/src/components/KpiDetailModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './KpiDetailModal.css'; // Import custom CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction KpiDetailModal({\n  show,\n  onClose,\n  onSubmit,\n  kpiDetails\n}) {\n  _s();\n  const [selectedProgress, setSelectedProgress] = useState(0);\n  const [currentProgress, setCurrentProgress] = useState(0);\n  const [comment, setComment] = useState('');\n  const [files, setFiles] = useState([]);\n  const [hasEvidence, setHasEvidence] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showEvidenceSection, setShowEvidenceSection] = useState(false);\n  const [evidenceUploaded, setEvidenceUploaded] = useState(false);\n  useEffect(() => {\n    if (kpiDetails) {\n      // Get the latest progress from comments or use the KPI's progress\n      const latestComment = kpiDetails.comments && kpiDetails.comments.length > 0 ? kpiDetails.comments[kpiDetails.comments.length - 1] : null;\n      const latestProgress = latestComment ? latestComment.progress : kpiDetails.progress || 0;\n      setSelectedProgress(latestProgress);\n      setCurrentProgress(latestProgress);\n      setComment('');\n      setFiles([]);\n      setHasEvidence(kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0);\n      setComments(kpiDetails.comments || []);\n      setShowSuccessAlert(false);\n      setShowEvidenceSection(latestProgress === 100 && !kpiDetails.submitted);\n      setEvidenceUploaded(kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0);\n    }\n  }, [kpiDetails]);\n  if (!kpiDetails) return null;\n\n  // Update isSubmitted check to also verify progress and evidence\n  const isSubmitted = kpiDetails.submitted === true && kpiDetails.progress === 100 && kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0;\n\n  // Get the latest progress for display\n  const displayProgress = comments.length > 0 ? comments[comments.length - 1].progress : currentProgress;\n  const handleProgressChange = newProgress => {\n    setSelectedProgress(newProgress);\n  };\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files));\n  };\n  const handleEvidenceUpload = async () => {\n    if (files.length > 0) {\n      try {\n        console.log('Starting evidence upload with files:', files.length);\n        const base64Files = await Promise.all(files.map(file => {\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n              // Extract the base64 data without the data URL prefix\n              const base64Data = reader.result.split(',')[1];\n              // Ensure the base64 string is properly formatted\n              const cleanBase64 = base64Data.replace(/[^A-Za-z0-9+/=]/g, '');\n              resolve({\n                filename: file.name,\n                mimetype: file.type,\n                data: cleanBase64,\n                uploadedAt: new Date().toISOString()\n              });\n            };\n            reader.onerror = error => {\n              console.error('Error reading file:', error);\n              reject(error);\n            };\n            reader.readAsDataURL(file);\n          });\n        }));\n        console.log('Files converted to base64, sending to server...');\n        const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            evidenceFiles: base64Files,\n            progress: currentProgress // Include current progress\n          })\n        });\n        console.log('Server response status:', response.status);\n        const responseData = await response.json();\n        console.log('Server response:', responseData);\n        if (!response.ok) {\n          throw new Error(responseData.error || 'Failed to upload evidence');\n        }\n\n        // Update local state\n        setHasEvidence(true);\n        setEvidenceUploaded(true);\n        setFiles([]);\n        setSuccessMessage('Evidence uploaded successfully! Now you can submit your KPI.');\n        setShowSuccessAlert(true);\n\n        // Notify parent component\n        if (onSubmit) {\n          onSubmit({\n            type: 'evidence',\n            evidence: base64Files\n          });\n        }\n      } catch (error) {\n        console.error('Failed to upload evidence:', error);\n        console.error('Error details:', {\n          message: error.message,\n          stack: error.stack\n        });\n        alert(`Error uploading evidence: ${error.message}`);\n      }\n    }\n  };\n  const handleProgressSubmit = async () => {\n    if (!comment.trim()) {\n      return alert('Please add a comment before updating progress.');\n    }\n    const newComment = {\n      text: comment,\n      date: new Date().toISOString(),\n      progress: selectedProgress,\n      by: 'Staff'\n    };\n    const updatedComments = [...comments, newComment];\n    try {\n      console.log('Sending update request with:', {\n        id: kpiDetails.id,\n        progress: selectedProgress,\n        comments: updatedComments,\n        status: getStatusFromProgress(selectedProgress)\n      });\n\n      // Make the API call first\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          progress: selectedProgress,\n          comments: updatedComments,\n          status: getStatusFromProgress(selectedProgress)\n        })\n      });\n      console.log('Response status:', response.status);\n      const responseData = await response.json();\n      console.log('Response data:', responseData);\n      if (!response.ok) {\n        throw new Error(responseData.error || 'Failed to update KPI');\n      }\n\n      // Update local state only after successful API call\n      setComments(updatedComments);\n      setCurrentProgress(selectedProgress);\n\n      // Update local state\n      if (selectedProgress === 100) {\n        setShowEvidenceSection(true);\n        setSuccessMessage('Progress updated to 100%. Please upload evidence next.');\n      } else {\n        setShowEvidenceSection(false);\n        setHasEvidence(false);\n        setSuccessMessage('Progress updated successfully.');\n      }\n\n      // Notify parent component of the update\n      if (onSubmit) {\n        onSubmit({\n          type: 'progress',\n          progress: selectedProgress,\n          comments: updatedComments,\n          comment: comment\n        });\n      }\n      setShowSuccessAlert(true);\n      setComment('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack\n      });\n      alert(`Failed to update progress: ${error.message}`);\n    }\n  };\n  const getStatusFromProgress = progress => {\n    if (progress === 100) return 'Completed';\n    if (progress >= 60) return 'On Track';\n    if (progress === 40) return 'At Risk';\n    return 'Behind';\n  };\n  const handleKpiSubmit = async () => {\n    if (currentProgress !== 100) {\n      return alert('Progress must be 100% before submitting.');\n    }\n    if (!evidenceUploaded) {\n      return alert('Please upload evidence before submitting.');\n    }\n    const finalCommentText = comments.length > 0 ? comments[comments.length - 1].text : '';\n    const finalComment = {\n      text: finalCommentText,\n      date: new Date().toLocaleString(),\n      progress: 100,\n      isFinal: true,\n      by: 'Staff'\n    };\n    const updatedComments = [...comments, finalComment];\n    try {\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          submitted: true,\n          verifyStatus: 'Pending',\n          progress: 100,\n          comments: updatedComments\n        })\n      });\n      if (!response.ok) throw new Error('Failed to submit KPI');\n      setComments(updatedComments);\n      setSuccessMessage('KPI submitted successfully and is now pending verification.');\n      setShowSuccessAlert(true);\n      setShowEvidenceSection(false); // Hide evidence section after submission\n    } catch (error) {\n      console.error('Error submitting KPI:', error);\n      alert('Failed to submit KPI. Please try again.');\n    }\n  };\n  const canSubmitKpi = currentProgress === 100 && evidenceUploaded && !isSubmitted;\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"KPI Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi-details-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: kpiDetails.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kpi-description\",\n            children: kpiDetails.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kpi-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kpi-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Due Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Verification: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: kpiDetails.verifyStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), showSuccessAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-alert\",\n            onClick: () => setShowSuccessAlert(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Current Progress: \", displayProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-bar ${displayProgress === 100 ? 'progress-complete' : ''}`,\n            style: {\n              width: `${displayProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Progress Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-container\",\n            children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"comment-date\",\n                  children: comment.date || 'Unknown date'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"progress-badge\",\n                  children: [comment.progress || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), comment.isFinal && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"final-comment\",\n                children: \"Final submission comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submitted-message\",\n          children: \"Your KPI has been submitted. Please wait for verification.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [currentProgress !== 100 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Update Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-buttons\",\n                children: [20, 40, 60, 80, 100].map(val => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `progress-btn ${selectedProgress === val ? 'selected' : ''}`,\n                  onClick: () => handleProgressChange(val),\n                  children: [val, \"%\"]\n                }, val, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"comment\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"comment\",\n                rows: 3,\n                className: \"comment-textarea\",\n                placeholder: \"Add a comment about your progress...\",\n                value: comment,\n                onChange: e => setComment(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), showEvidenceSection && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Evidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), !hasEvidence && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-alert\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"warning-icon\",\n                children: \"\\u26A0\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this), \"Please upload evidence to complete your KPI submission.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileChange,\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `upload-btn ${files.length === 0 ? 'disabled' : ''}`,\n              onClick: handleEvidenceUpload,\n              disabled: files.length === 0,\n              children: \"Upload Evidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), hasEvidence && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"evidence-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Uploaded Files:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: (kpiDetails.evidenceFiles || []).map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: file.data,\n                    download: file.filename,\n                    children: file.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 29\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), hasEvidence && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"success-text\",\n              children: \"\\u2713 Evidence uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `update-btn ${!comment.trim() ? 'disabled' : ''}`,\n            onClick: handleProgressSubmit,\n            disabled: !comment.trim(),\n            children: \"Update Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), showEvidenceSection && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `submit-btn ${!canSubmitKpi ? 'disabled' : ''}`,\n            onClick: handleKpiSubmit,\n            disabled: !canSubmitKpi,\n            children: \"Submit KPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(KpiDetailModal, \"lIHZt4ZYfeUiLjKLQlOFTBHFExI=\");\n_c = KpiDetailModal;\nexport default KpiDetailModal;\nvar _c;\n$RefreshReg$(_c, \"KpiDetailModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","KpiDetailModal","show","onClose","onSubmit","kpiDetails","_s","selectedProgress","setSelectedProgress","currentProgress","setCurrentProgress","comment","setComment","files","setFiles","hasEvidence","setHasEvidence","comments","setComments","showSuccessAlert","setShowSuccessAlert","successMessage","setSuccessMessage","showEvidenceSection","setShowEvidenceSection","evidenceUploaded","setEvidenceUploaded","latestComment","length","latestProgress","progress","evidenceFiles","submitted","isSubmitted","displayProgress","handleProgressChange","newProgress","handleFileChange","e","Array","from","target","handleEvidenceUpload","console","log","base64Files","Promise","all","map","file","resolve","reject","reader","FileReader","onload","base64Data","result","split","cleanBase64","replace","filename","name","mimetype","type","data","uploadedAt","Date","toISOString","onerror","error","readAsDataURL","response","fetch","id","method","headers","body","JSON","stringify","status","responseData","json","ok","Error","evidence","message","stack","alert","handleProgressSubmit","trim","newComment","text","date","by","updatedComments","getStatusFromProgress","handleKpiSubmit","finalCommentText","finalComment","toLocaleString","isFinal","verifyStatus","canSubmitKpi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","description","category","priority","startDate","dueDate","style","width","index","val","htmlFor","rows","placeholder","value","onChange","multiple","disabled","idx","href","download","_c","$RefreshReg$"],"sources":["/Users/muhamadaliff/Documents/GitHub/wp_kpiApp/client/src/components/KpiDetailModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './KpiDetailModal.css'; // Import custom CSS\n\nfunction KpiDetailModal({ show, onClose, onSubmit, kpiDetails }) {\n  const [selectedProgress, setSelectedProgress] = useState(0);\n  const [currentProgress, setCurrentProgress] = useState(0);\n  const [comment, setComment] = useState('');\n  const [files, setFiles] = useState([]);\n  const [hasEvidence, setHasEvidence] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showEvidenceSection, setShowEvidenceSection] = useState(false);\n  const [evidenceUploaded, setEvidenceUploaded] = useState(false);\n\n  useEffect(() => {\n    if (kpiDetails) {\n      // Get the latest progress from comments or use the KPI's progress\n      const latestComment = kpiDetails.comments && kpiDetails.comments.length > 0 \n        ? kpiDetails.comments[kpiDetails.comments.length - 1]\n        : null;\n      \n      const latestProgress = latestComment ? latestComment.progress : (kpiDetails.progress || 0);\n      \n      setSelectedProgress(latestProgress);\n      setCurrentProgress(latestProgress);\n      setComment('');\n      setFiles([]);\n      setHasEvidence(kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0);\n      setComments(kpiDetails.comments || []);\n      setShowSuccessAlert(false);\n      setShowEvidenceSection(latestProgress === 100 && !kpiDetails.submitted);\n      setEvidenceUploaded(kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0);\n    }\n  }, [kpiDetails]);\n\n  if (!kpiDetails) return null;\n\n  // Update isSubmitted check to also verify progress and evidence\n  const isSubmitted = kpiDetails.submitted === true && kpiDetails.progress === 100 && kpiDetails.evidenceFiles && kpiDetails.evidenceFiles.length > 0;\n\n  // Get the latest progress for display\n  const displayProgress = comments.length > 0 ? comments[comments.length - 1].progress : currentProgress;\n\n  const handleProgressChange = (newProgress) => {\n    setSelectedProgress(newProgress);\n  };\n\n  const handleFileChange = (e) => {\n    setFiles(Array.from(e.target.files));\n  };\n\n  const handleEvidenceUpload = async () => {\n    if (files.length > 0) {\n      try {\n        console.log('Starting evidence upload with files:', files.length);\n\n        const base64Files = await Promise.all(files.map(file => {\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n              // Extract the base64 data without the data URL prefix\n              const base64Data = reader.result.split(',')[1];\n              // Ensure the base64 string is properly formatted\n              const cleanBase64 = base64Data.replace(/[^A-Za-z0-9+/=]/g, '');\n              resolve({\n                filename: file.name,\n                mimetype: file.type,\n                data: cleanBase64,\n                uploadedAt: new Date().toISOString()\n              });\n            };\n            reader.onerror = (error) => {\n              console.error('Error reading file:', error);\n              reject(error);\n            };\n            reader.readAsDataURL(file);\n          });\n        }));\n\n        console.log('Files converted to base64, sending to server...');\n\n        const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ \n            evidenceFiles: base64Files,\n            progress: currentProgress // Include current progress\n          })\n        });\n\n        console.log('Server response status:', response.status);\n        const responseData = await response.json();\n        console.log('Server response:', responseData);\n\n        if (!response.ok) {\n          throw new Error(responseData.error || 'Failed to upload evidence');\n        }\n\n        // Update local state\n        setHasEvidence(true);\n        setEvidenceUploaded(true);\n        setFiles([]);\n        setSuccessMessage('Evidence uploaded successfully! Now you can submit your KPI.');\n        setShowSuccessAlert(true);\n\n        // Notify parent component\n        if (onSubmit) {\n          onSubmit({\n            type: 'evidence',\n            evidence: base64Files\n          });\n        }\n      } catch (error) {\n        console.error('Failed to upload evidence:', error);\n        console.error('Error details:', {\n          message: error.message,\n          stack: error.stack\n        });\n        alert(`Error uploading evidence: ${error.message}`);\n      }\n    }\n  };\n\n  const handleProgressSubmit = async () => {\n    if (!comment.trim()) {\n      return alert('Please add a comment before updating progress.');\n    }\n\n    const newComment = {\n      text: comment,\n      date: new Date().toISOString(),\n      progress: selectedProgress,\n      by: 'Staff'\n    };\n\n    const updatedComments = [...comments, newComment];\n\n    try {\n      console.log('Sending update request with:', {\n        id: kpiDetails.id,\n        progress: selectedProgress,\n        comments: updatedComments,\n        status: getStatusFromProgress(selectedProgress)\n      });\n\n      // Make the API call first\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          progress: selectedProgress,\n          comments: updatedComments,\n          status: getStatusFromProgress(selectedProgress)\n        })\n      });\n\n      console.log('Response status:', response.status);\n      const responseData = await response.json();\n      console.log('Response data:', responseData);\n\n      if (!response.ok) {\n        throw new Error(responseData.error || 'Failed to update KPI');\n      }\n\n      // Update local state only after successful API call\n      setComments(updatedComments);\n      setCurrentProgress(selectedProgress);\n\n      // Update local state\n      if (selectedProgress === 100) {\n        setShowEvidenceSection(true);\n        setSuccessMessage('Progress updated to 100%. Please upload evidence next.');\n      } else {\n        setShowEvidenceSection(false);\n        setHasEvidence(false);\n        setSuccessMessage('Progress updated successfully.');\n      }\n\n      // Notify parent component of the update\n      if (onSubmit) {\n        onSubmit({\n          type: 'progress',\n          progress: selectedProgress,\n          comments: updatedComments,\n          comment: comment\n        });\n      }\n\n      setShowSuccessAlert(true);\n      setComment('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack\n      });\n      alert(`Failed to update progress: ${error.message}`);\n    }\n  };\n\n  const getStatusFromProgress = (progress) => {\n    if (progress === 100) return 'Completed';\n    if (progress >= 60) return 'On Track';\n    if (progress === 40) return 'At Risk';\n    return 'Behind';\n  };\n\n  const handleKpiSubmit = async () => {\n    if (currentProgress !== 100) {\n      return alert('Progress must be 100% before submitting.');\n    }\n    \n    if (!evidenceUploaded) {\n      return alert('Please upload evidence before submitting.');\n    }\n\n    const finalCommentText = comments.length > 0 ? comments[comments.length - 1].text : '';\n\n    const finalComment = {\n      text: finalCommentText,\n      date: new Date().toLocaleString(),\n      progress: 100,\n      isFinal: true,\n      by: 'Staff'\n    };\n\n    const updatedComments = [...comments, finalComment];\n\n    try {\n      const response = await fetch(`/api/kpi/${kpiDetails.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          submitted: true,\n          verifyStatus: 'Pending',\n          progress: 100,\n          comments: updatedComments\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit KPI');\n\n      setComments(updatedComments);\n      setSuccessMessage('KPI submitted successfully and is now pending verification.');\n      setShowSuccessAlert(true);\n      setShowEvidenceSection(false); // Hide evidence section after submission\n    } catch (error) {\n      console.error('Error submitting KPI:', error);\n      alert('Failed to submit KPI. Please try again.');\n    }\n  };\n\n  const canSubmitKpi = currentProgress === 100 && evidenceUploaded && !isSubmitted;\n\n  if (!show) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-container\">\n        {/* Modal Header */}\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">KPI Details</h3>\n          <button\n            onClick={onClose}\n            className=\"close-button\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Modal Body */}\n        <div className=\"modal-body\">\n          {/* KPI Details Header */}\n          <div className=\"kpi-details-header\">\n            <h5>{kpiDetails.title}</h5>\n            <p className=\"kpi-description\">{kpiDetails.description}</p>\n            <div className=\"kpi-info-row\">\n              <span>Category: <strong>{kpiDetails.category}</strong></span>\n              <span>Priority: <strong>{kpiDetails.priority}</strong></span>\n              <span>Status: <strong>{kpiDetails.status}</strong></span>\n            </div>\n            <div className=\"kpi-info-row\">\n              <span>Start Date: <strong>{kpiDetails.startDate}</strong></span>\n              <span>Due Date: <strong>{kpiDetails.dueDate}</strong></span>\n              <span>Verification: <strong>{kpiDetails.verifyStatus}</strong></span>\n            </div>\n          </div>\n\n          {/* Success alert for actions */}\n          {showSuccessAlert && (\n            <div className=\"alert alert-success\">\n              <span>{successMessage}</span>\n              <button\n                className=\"close-alert\"\n                onClick={() => setShowSuccessAlert(false)}\n              >\n                ×\n              </button>\n            </div>\n          )}\n\n          {/* Progress Display - Show actual KPI progress */}\n          <h6>Current Progress: {displayProgress}%</h6>\n          <div className=\"progress-container\">\n            <div\n              className={`progress-bar ${displayProgress === 100 ? 'progress-complete' : ''}`}\n              style={{ width: `${displayProgress}%` }}>\n            </div>\n          </div>\n\n          {/* Display comments if available */}\n          {comments.length > 0 && (\n            <div className=\"comments-section\">\n              <h6>Progress Comments:</h6>\n              <div className=\"comments-container\">\n                {comments.map((comment, index) => (\n                  <div key={index} className=\"comment-item\">\n                    <div className=\"comment-header\">\n                      <small className=\"comment-date\">{comment.date || 'Unknown date'}</small>\n                      <small className=\"progress-badge\">\n                        {comment.progress || 0}%\n                      </small>\n                    </div>\n                    <p>{comment.text}</p>\n                    {comment.isFinal &&\n                      <small className=\"final-comment\">Final submission comment</small>\n                    }\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Display submitted message or edit controls */}\n          {isSubmitted ? (\n            <div className=\"submitted-message\">\n              Your KPI has been submitted. Please wait for verification.\n            </div>\n          ) : (\n            <>\n\n              {/* Hide Progress & Comment update when progress is 100 */}\n              {currentProgress !== 100 && (\n                <>\n                  {/* Progress Selection */}\n                  <div className=\"form-group\">\n                    <label>Update Progress</label>\n                    <div className=\"progress-buttons\">\n                      {[20, 40, 60, 80, 100].map((val) => (\n                        <button\n                          key={val}\n                          className={`progress-btn ${selectedProgress === val ? 'selected' : ''}`}\n                          onClick={() => handleProgressChange(val)}\n                        >\n                          {val}%\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Comment Input */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"comment\">Comment</label>\n                    <textarea\n                      id=\"comment\"\n                      rows={3}\n                      className=\"comment-textarea\"\n                      placeholder=\"Add a comment about your progress...\"\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                    ></textarea>\n                  </div>\n                </>\n              )}\n\n\n              {/* Evidence Upload - Only show after progress is updated to 100% */}\n              {showEvidenceSection && (\n                <div className=\"form-group\">\n                  <label>Upload Evidence</label>\n                  {!hasEvidence && (\n                    <div className=\"warning-alert\">\n                      <i className=\"warning-icon\">⚠️</i>\n                      Please upload evidence to complete your KPI submission.\n                    </div>\n                  )}\n                  <input\n                    type=\"file\"\n                    multiple\n                    onChange={handleFileChange}\n                    className=\"file-input\"\n                  />\n                  <button\n                    className={`upload-btn ${files.length === 0 ? 'disabled' : ''}`}\n                    onClick={handleEvidenceUpload}\n                    disabled={files.length === 0}>\n                    Upload Evidence\n                  </button>\n\n                  {hasEvidence && (\n                    <div className=\"evidence-list\">\n                      <label>Uploaded Files:</label>\n                      <ul>\n                        {(kpiDetails.evidenceFiles || []).map((file, idx) => (\n                          <li key={idx}>\n                            <a href={file.data} download={file.filename}>\n                              {file.filename}\n                            </a>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n\n                  {hasEvidence && <small className=\"success-text\">✓ Evidence uploaded</small>}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n\n        {/* Modal Footer */}\n        <div className=\"modal-footer\">\n          <button\n            className=\"close-btn\"\n            onClick={onClose}>\n            Close\n          </button>\n\n          {!isSubmitted && (\n            <>\n              {/* Update Progress Button */}\n              <button\n                className={`update-btn ${!comment.trim() ? 'disabled' : ''}`}\n                onClick={handleProgressSubmit}\n                disabled={!comment.trim()}>\n                Update Progress\n              </button>\n\n              {/* Submit KPI Button - Only if progress is 100% and evidence is uploaded */}\n              {showEvidenceSection && (\n                <button\n                  className={`submit-btn ${!canSubmitKpi ? 'disabled' : ''}`}\n                  onClick={handleKpiSubmit}\n                  disabled={!canSubmitKpi}>\n                  Submit KPI\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default KpiDetailModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,EAAE;MACd;MACA,MAAMsB,aAAa,GAAGtB,UAAU,CAACY,QAAQ,IAAIZ,UAAU,CAACY,QAAQ,CAACW,MAAM,GAAG,CAAC,GACvEvB,UAAU,CAACY,QAAQ,CAACZ,UAAU,CAACY,QAAQ,CAACW,MAAM,GAAG,CAAC,CAAC,GACnD,IAAI;MAER,MAAMC,cAAc,GAAGF,aAAa,GAAGA,aAAa,CAACG,QAAQ,GAAIzB,UAAU,CAACyB,QAAQ,IAAI,CAAE;MAE1FtB,mBAAmB,CAACqB,cAAc,CAAC;MACnCnB,kBAAkB,CAACmB,cAAc,CAAC;MAClCjB,UAAU,CAAC,EAAE,CAAC;MACdE,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAACX,UAAU,CAAC0B,aAAa,IAAI1B,UAAU,CAAC0B,aAAa,CAACH,MAAM,GAAG,CAAC,CAAC;MAC/EV,WAAW,CAACb,UAAU,CAACY,QAAQ,IAAI,EAAE,CAAC;MACtCG,mBAAmB,CAAC,KAAK,CAAC;MAC1BI,sBAAsB,CAACK,cAAc,KAAK,GAAG,IAAI,CAACxB,UAAU,CAAC2B,SAAS,CAAC;MACvEN,mBAAmB,CAACrB,UAAU,CAAC0B,aAAa,IAAI1B,UAAU,CAAC0B,aAAa,CAACH,MAAM,GAAG,CAAC,CAAC;IACtF;EACF,CAAC,EAAE,CAACvB,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;;EAE5B;EACA,MAAM4B,WAAW,GAAG5B,UAAU,CAAC2B,SAAS,KAAK,IAAI,IAAI3B,UAAU,CAACyB,QAAQ,KAAK,GAAG,IAAIzB,UAAU,CAAC0B,aAAa,IAAI1B,UAAU,CAAC0B,aAAa,CAACH,MAAM,GAAG,CAAC;;EAEnJ;EACA,MAAMM,eAAe,GAAGjB,QAAQ,CAACW,MAAM,GAAG,CAAC,GAAGX,QAAQ,CAACA,QAAQ,CAACW,MAAM,GAAG,CAAC,CAAC,CAACE,QAAQ,GAAGrB,eAAe;EAEtG,MAAM0B,oBAAoB,GAAIC,WAAW,IAAK;IAC5C5B,mBAAmB,CAAC4B,WAAW,CAAC;EAClC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BxB,QAAQ,CAACyB,KAAK,CAACC,IAAI,CAACF,CAAC,CAACG,MAAM,CAAC5B,KAAK,CAAC,CAAC;EACtC,CAAC;EAED,MAAM6B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI7B,KAAK,CAACe,MAAM,GAAG,CAAC,EAAE;MACpB,IAAI;QACFe,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE/B,KAAK,CAACe,MAAM,CAAC;QAEjE,MAAMiB,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAClC,KAAK,CAACmC,GAAG,CAACC,IAAI,IAAI;UACtD,OAAO,IAAIH,OAAO,CAAC,CAACI,OAAO,EAAEC,MAAM,KAAK;YACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;YAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;cACpB;cACA,MAAMC,UAAU,GAAGH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC9C;cACA,MAAMC,WAAW,GAAGH,UAAU,CAACI,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;cAC9DT,OAAO,CAAC;gBACNU,QAAQ,EAAEX,IAAI,CAACY,IAAI;gBACnBC,QAAQ,EAAEb,IAAI,CAACc,IAAI;gBACnBC,IAAI,EAAEN,WAAW;gBACjBO,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;cACrC,CAAC,CAAC;YACJ,CAAC;YACDf,MAAM,CAACgB,OAAO,GAAIC,KAAK,IAAK;cAC1B1B,OAAO,CAAC0B,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;cAC3ClB,MAAM,CAACkB,KAAK,CAAC;YACf,CAAC;YACDjB,MAAM,CAACkB,aAAa,CAACrB,IAAI,CAAC;UAC5B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEHN,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAE9D,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAYnE,UAAU,CAACoE,EAAE,EAAE,EAAE;UACxDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB/C,aAAa,EAAEc,WAAW;YAC1Bf,QAAQ,EAAErB,eAAe,CAAC;UAC5B,CAAC;QACH,CAAC,CAAC;QAEFkC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE2B,QAAQ,CAACQ,MAAM,CAAC;QACvD,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAC1CtC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEoC,YAAY,CAAC;QAE7C,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACX,KAAK,IAAI,2BAA2B,CAAC;QACpE;;QAEA;QACArD,cAAc,CAAC,IAAI,CAAC;QACpBU,mBAAmB,CAAC,IAAI,CAAC;QACzBZ,QAAQ,CAAC,EAAE,CAAC;QACZQ,iBAAiB,CAAC,8DAA8D,CAAC;QACjFF,mBAAmB,CAAC,IAAI,CAAC;;QAEzB;QACA,IAAIhB,QAAQ,EAAE;UACZA,QAAQ,CAAC;YACP2D,IAAI,EAAE,UAAU;YAChBqB,QAAQ,EAAEvC;UACZ,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACd1B,OAAO,CAAC0B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD1B,OAAO,CAAC0B,KAAK,CAAC,gBAAgB,EAAE;UAC9BgB,OAAO,EAAEhB,KAAK,CAACgB,OAAO;UACtBC,KAAK,EAAEjB,KAAK,CAACiB;QACf,CAAC,CAAC;QACFC,KAAK,CAAC,6BAA6BlB,KAAK,CAACgB,OAAO,EAAE,CAAC;MACrD;IACF;EACF,CAAC;EAED,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAAC7E,OAAO,CAAC8E,IAAI,CAAC,CAAC,EAAE;MACnB,OAAOF,KAAK,CAAC,gDAAgD,CAAC;IAChE;IAEA,MAAMG,UAAU,GAAG;MACjBC,IAAI,EAAEhF,OAAO;MACbiF,IAAI,EAAE,IAAI1B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC9BrC,QAAQ,EAAEvB,gBAAgB;MAC1BsF,EAAE,EAAE;IACN,CAAC;IAED,MAAMC,eAAe,GAAG,CAAC,GAAG7E,QAAQ,EAAEyE,UAAU,CAAC;IAEjD,IAAI;MACF/C,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE;QAC1C6B,EAAE,EAAEpE,UAAU,CAACoE,EAAE;QACjB3C,QAAQ,EAAEvB,gBAAgB;QAC1BU,QAAQ,EAAE6E,eAAe;QACzBf,MAAM,EAAEgB,qBAAqB,CAACxF,gBAAgB;MAChD,CAAC,CAAC;;MAEF;MACA,MAAMgE,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAYnE,UAAU,CAACoE,EAAE,EAAE,EAAE;QACxDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBhD,QAAQ,EAAEvB,gBAAgB;UAC1BU,QAAQ,EAAE6E,eAAe;UACzBf,MAAM,EAAEgB,qBAAqB,CAACxF,gBAAgB;QAChD,CAAC;MACH,CAAC,CAAC;MAEFoC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE2B,QAAQ,CAACQ,MAAM,CAAC;MAChD,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC1CtC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEoC,YAAY,CAAC;MAE3C,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACX,KAAK,IAAI,sBAAsB,CAAC;MAC/D;;MAEA;MACAnD,WAAW,CAAC4E,eAAe,CAAC;MAC5BpF,kBAAkB,CAACH,gBAAgB,CAAC;;MAEpC;MACA,IAAIA,gBAAgB,KAAK,GAAG,EAAE;QAC5BiB,sBAAsB,CAAC,IAAI,CAAC;QAC5BF,iBAAiB,CAAC,wDAAwD,CAAC;MAC7E,CAAC,MAAM;QACLE,sBAAsB,CAAC,KAAK,CAAC;QAC7BR,cAAc,CAAC,KAAK,CAAC;QACrBM,iBAAiB,CAAC,gCAAgC,CAAC;MACrD;;MAEA;MACA,IAAIlB,QAAQ,EAAE;QACZA,QAAQ,CAAC;UACP2D,IAAI,EAAE,UAAU;UAChBjC,QAAQ,EAAEvB,gBAAgB;UAC1BU,QAAQ,EAAE6E,eAAe;UACzBnF,OAAO,EAAEA;QACX,CAAC,CAAC;MACJ;MAEAS,mBAAmB,CAAC,IAAI,CAAC;MACzBR,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOyD,KAAK,EAAE;MACd1B,OAAO,CAAC0B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD1B,OAAO,CAAC0B,KAAK,CAAC,gBAAgB,EAAE;QAC9BgB,OAAO,EAAEhB,KAAK,CAACgB,OAAO;QACtBC,KAAK,EAAEjB,KAAK,CAACiB;MACf,CAAC,CAAC;MACFC,KAAK,CAAC,8BAA8BlB,KAAK,CAACgB,OAAO,EAAE,CAAC;IACtD;EACF,CAAC;EAED,MAAMU,qBAAqB,GAAIjE,QAAQ,IAAK;IAC1C,IAAIA,QAAQ,KAAK,GAAG,EAAE,OAAO,WAAW;IACxC,IAAIA,QAAQ,IAAI,EAAE,EAAE,OAAO,UAAU;IACrC,IAAIA,QAAQ,KAAK,EAAE,EAAE,OAAO,SAAS;IACrC,OAAO,QAAQ;EACjB,CAAC;EAED,MAAMkE,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIvF,eAAe,KAAK,GAAG,EAAE;MAC3B,OAAO8E,KAAK,CAAC,0CAA0C,CAAC;IAC1D;IAEA,IAAI,CAAC9D,gBAAgB,EAAE;MACrB,OAAO8D,KAAK,CAAC,2CAA2C,CAAC;IAC3D;IAEA,MAAMU,gBAAgB,GAAGhF,QAAQ,CAACW,MAAM,GAAG,CAAC,GAAGX,QAAQ,CAACA,QAAQ,CAACW,MAAM,GAAG,CAAC,CAAC,CAAC+D,IAAI,GAAG,EAAE;IAEtF,MAAMO,YAAY,GAAG;MACnBP,IAAI,EAAEM,gBAAgB;MACtBL,IAAI,EAAE,IAAI1B,IAAI,CAAC,CAAC,CAACiC,cAAc,CAAC,CAAC;MACjCrE,QAAQ,EAAE,GAAG;MACbsE,OAAO,EAAE,IAAI;MACbP,EAAE,EAAE;IACN,CAAC;IAED,MAAMC,eAAe,GAAG,CAAC,GAAG7E,QAAQ,EAAEiF,YAAY,CAAC;IAEnD,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAYnE,UAAU,CAACoE,EAAE,EAAE,EAAE;QACxDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB9C,SAAS,EAAE,IAAI;UACfqE,YAAY,EAAE,SAAS;UACvBvE,QAAQ,EAAE,GAAG;UACbb,QAAQ,EAAE6E;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACvB,QAAQ,CAACW,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAEzDjE,WAAW,CAAC4E,eAAe,CAAC;MAC5BxE,iBAAiB,CAAC,6DAA6D,CAAC;MAChFF,mBAAmB,CAAC,IAAI,CAAC;MACzBI,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAO6C,KAAK,EAAE;MACd1B,OAAO,CAAC0B,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CkB,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,MAAMe,YAAY,GAAG7F,eAAe,KAAK,GAAG,IAAIgB,gBAAgB,IAAI,CAACQ,WAAW;EAEhF,IAAI,CAAC/B,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACEJ,OAAA;IAAKyG,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B1G,OAAA;MAAKyG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAE9B1G,OAAA;QAAKyG,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1G,OAAA;UAAIyG,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5C9G,OAAA;UACE+G,OAAO,EAAE1G,OAAQ;UACjBoG,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN9G,OAAA;QAAKyG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAEzB1G,OAAA;UAAKyG,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC1G,OAAA;YAAA0G,QAAA,EAAKnG,UAAU,CAACyG;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3B9G,OAAA;YAAGyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEnG,UAAU,CAAC0G;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3D9G,OAAA;YAAKyG,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B1G,OAAA;cAAA0G,QAAA,GAAM,YAAU,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAAC2G;cAAQ;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7D9G,OAAA;cAAA0G,QAAA,GAAM,YAAU,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAAC4G;cAAQ;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7D9G,OAAA;cAAA0G,QAAA,GAAM,UAAQ,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAAC0E;cAAM;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACN9G,OAAA;YAAKyG,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B1G,OAAA;cAAA0G,QAAA,GAAM,cAAY,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAAC6G;cAAS;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChE9G,OAAA;cAAA0G,QAAA,GAAM,YAAU,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAAC8G;cAAO;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5D9G,OAAA;cAAA0G,QAAA,GAAM,gBAAc,eAAA1G,OAAA;gBAAA0G,QAAA,EAASnG,UAAU,CAACgG;cAAY;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLzF,gBAAgB,iBACfrB,OAAA;UAAKyG,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC1G,OAAA;YAAA0G,QAAA,EAAOnF;UAAc;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7B9G,OAAA;YACEyG,SAAS,EAAC,aAAa;YACvBM,OAAO,EAAEA,CAAA,KAAMzF,mBAAmB,CAAC,KAAK,CAAE;YAAAoF,QAAA,EAC3C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eAGD9G,OAAA;UAAA0G,QAAA,GAAI,oBAAkB,EAACtE,eAAe,EAAC,GAAC;QAAA;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7C9G,OAAA;UAAKyG,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjC1G,OAAA;YACEyG,SAAS,EAAE,gBAAgBrE,eAAe,KAAK,GAAG,GAAG,mBAAmB,GAAG,EAAE,EAAG;YAChFkF,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAGnF,eAAe;YAAI;UAAE;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGL3F,QAAQ,CAACW,MAAM,GAAG,CAAC,iBAClB9B,OAAA;UAAKyG,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B1G,OAAA;YAAA0G,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B9G,OAAA;YAAKyG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChCvF,QAAQ,CAAC+B,GAAG,CAAC,CAACrC,OAAO,EAAE2G,KAAK,kBAC3BxH,OAAA;cAAiByG,SAAS,EAAC,cAAc;cAAAC,QAAA,gBACvC1G,OAAA;gBAAKyG,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7B1G,OAAA;kBAAOyG,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE7F,OAAO,CAACiF,IAAI,IAAI;gBAAc;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxE9G,OAAA;kBAAOyG,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,GAC9B7F,OAAO,CAACmB,QAAQ,IAAI,CAAC,EAAC,GACzB;gBAAA;kBAAA2E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACN9G,OAAA;gBAAA0G,QAAA,EAAI7F,OAAO,CAACgF;cAAI;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACpBjG,OAAO,CAACyF,OAAO,iBACdtG,OAAA;gBAAOyG,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAT3DU,KAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGA3E,WAAW,gBACVnC,OAAA;UAAKyG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAEN9G,OAAA,CAAAE,SAAA;UAAAwG,QAAA,GAGG/F,eAAe,KAAK,GAAG,iBACtBX,OAAA,CAAAE,SAAA;YAAAwG,QAAA,gBAEE1G,OAAA;cAAKyG,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB1G,OAAA;gBAAA0G,QAAA,EAAO;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9B9G,OAAA;gBAAKyG,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC9B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAACxD,GAAG,CAAEuE,GAAG,iBAC7BzH,OAAA;kBAEEyG,SAAS,EAAE,gBAAgBhG,gBAAgB,KAAKgH,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;kBACxEV,OAAO,EAAEA,CAAA,KAAM1E,oBAAoB,CAACoF,GAAG,CAAE;kBAAAf,QAAA,GAExCe,GAAG,EAAC,GACP;gBAAA,GALOA,GAAG;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKF,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGN9G,OAAA;cAAKyG,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzB1G,OAAA;gBAAO0H,OAAO,EAAC,SAAS;gBAAAhB,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxC9G,OAAA;gBACE2E,EAAE,EAAC,SAAS;gBACZgD,IAAI,EAAE,CAAE;gBACRlB,SAAS,EAAC,kBAAkB;gBAC5BmB,WAAW,EAAC,sCAAsC;gBAClDC,KAAK,EAAEhH,OAAQ;gBACfiH,QAAQ,EAAGtF,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAACG,MAAM,CAACkF,KAAK;cAAE;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA,eACN,CACH,EAIArF,mBAAmB,iBAClBzB,OAAA;YAAKyG,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB1G,OAAA;cAAA0G,QAAA,EAAO;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC7B,CAAC7F,WAAW,iBACXjB,OAAA;cAAKyG,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5B1G,OAAA;gBAAGyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,2DAEpC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACN,eACD9G,OAAA;cACEiE,IAAI,EAAC,MAAM;cACX8D,QAAQ;cACRD,QAAQ,EAAEvF,gBAAiB;cAC3BkE,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACF9G,OAAA;cACEyG,SAAS,EAAE,cAAc1F,KAAK,CAACe,MAAM,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;cAChEiF,OAAO,EAAEnE,oBAAqB;cAC9BoF,QAAQ,EAAEjH,KAAK,CAACe,MAAM,KAAK,CAAE;cAAA4E,QAAA,EAAC;YAEhC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAER7F,WAAW,iBACVjB,OAAA;cAAKyG,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5B1G,OAAA;gBAAA0G,QAAA,EAAO;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9B9G,OAAA;gBAAA0G,QAAA,EACG,CAACnG,UAAU,CAAC0B,aAAa,IAAI,EAAE,EAAEiB,GAAG,CAAC,CAACC,IAAI,EAAE8E,GAAG,kBAC9CjI,OAAA;kBAAA0G,QAAA,eACE1G,OAAA;oBAAGkI,IAAI,EAAE/E,IAAI,CAACe,IAAK;oBAACiE,QAAQ,EAAEhF,IAAI,CAACW,QAAS;oBAAA4C,QAAA,EACzCvD,IAAI,CAACW;kBAAQ;oBAAA6C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb;gBAAC,GAHGmB,GAAG;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAIR,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN,EAEA7F,WAAW,iBAAIjB,OAAA;cAAOyG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CACN;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGN9G,OAAA;QAAKyG,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1G,OAAA;UACEyG,SAAS,EAAC,WAAW;UACrBM,OAAO,EAAE1G,OAAQ;UAAAqG,QAAA,EAAC;QAEpB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAER,CAAC3E,WAAW,iBACXnC,OAAA,CAAAE,SAAA;UAAAwG,QAAA,gBAEE1G,OAAA;YACEyG,SAAS,EAAE,cAAc,CAAC5F,OAAO,CAAC8E,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;YAC7DoB,OAAO,EAAErB,oBAAqB;YAC9BsC,QAAQ,EAAE,CAACnH,OAAO,CAAC8E,IAAI,CAAC,CAAE;YAAAe,QAAA,EAAC;UAE7B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAGRrF,mBAAmB,iBAClBzB,OAAA;YACEyG,SAAS,EAAE,cAAc,CAACD,YAAY,GAAG,UAAU,GAAG,EAAE,EAAG;YAC3DO,OAAO,EAAEb,eAAgB;YACzB8B,QAAQ,EAAE,CAACxB,YAAa;YAAAE,QAAA,EAAC;UAE3B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtG,EAAA,CApcQL,cAAc;AAAAiI,EAAA,GAAdjI,cAAc;AAscvB,eAAeA,cAAc;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}